<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GitHub + Hexo搭建自己博客(三) 多设备管理]]></title>
    <url>%2F2019%2F02%2F21%2FGitHub-Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2-%E4%B8%89-%E5%A4%9A%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[介绍：正常情况下, 我们博客的相关配置信息都是在本地的, 并未上传服务器, 这样当我们想在其他设备, 比如公司的电脑或者原电脑重装了系统, 那么我们便无法再维护我们的博客了一、环境配置安装Node.js安装git安装hexo二、创建分支hexo生成的静态博客文件都是上传到GitHub上的, 且默认放在master分支上, 而一些相关的配置文件都在本地hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支1、仓库新建hexo分支在Github的username.github.io仓库上新建一个hexo(分支名字可自定义)分支, 在下图箭头位置输入分支名字,完成创建；2、设置默认分支切换到该hexo分支，并在该仓库-&gt;Settings-&gt;Branches-&gt;Default branch中将默认分支设为hexo,然后点击update进行保存；三、配置文件上传Github该步骤需要在博客配置文件和主题配置文件所在的电脑上操作，想了解git相关命令，请移步这里1.克隆hexo分支1.1 在合适位置将上述新建的hexo分支克隆到本地, git clone git@github.com:Sandop/Sandop.github.io.git，克隆地址换成自己的地址；1.2 在终端中cd进入该username.github.io文件目录,cd username.github.io；1.3 在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支hexo2.上传部署文件2.1 先将本地博客的部署文件（Hexo博客项目目录下的全部文件）全部拷贝进username.github.io文件目录中去2.2 准备将所有的文件都提交到hexo分支，提交时考虑以下注意事项：将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败可能有人会问，删除了themes目录中的.git不就不能git pull更新主题了吗，很简单，需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目录即可2.3 最后用终端或者管理工具将所有文件提交到hexo分支,命令git add .、git commit -m &quot;first commit hexo branch&quot;（引号内容可改）、git push;2.4 master分支和hexo分支各自保存着一个版本。master分支用于保存博客静态资源，提供博客页面供人访问；hexo分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内也不会有任何冲突四、同步到其他电脑将新电脑的生成的ssh key添加到GitHub账户上；在新电脑上克隆username.github.io仓库的hexo分支到本地，此时本地git仓库处于hexo分支；切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉 node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录，所以需要install下)；在新电脑上安装hexo命令,npm install -g hexo；到这里了就可以开始在自己的新电脑上写博客了！5.1 编辑、撰写文章或其他博客更新改动5.2 依次执行git add .、git commit -m &#39;***&#39;（引号内容为描述提交内容）、git push指令，保证xxx分支版本最新5.3 执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo d指令，完成后就会发现，最新改动已经更新到master分支了，两个分支互不干扰！每次换电脑更新博客的时候, 在修改之前最好也要git pull拉取一下最新的更新]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo搭建自己博客(二) Next主题配置]]></title>
    <url>%2F2019%2F02%2F19%2FGitHub-Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2-%E4%BA%8C-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[一、基本配置在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。1、站点基本设置在站点配置文件 即博客根目录下的_config.yml中123456789# Sitetitle: Sando博客 subtitle: 代码日记 description: 寄杂志第keywords:author: Sandolanguage: zh-Hanstimezone:2、头像设置2.1 设置头像在站点配置文件 中新增avatar，值设置为头像的链接地址。地址可以是网络地址，也可以是本地地址（放置在source/images/ 目录下）12#侧边栏头像设置avatar: /images/user.jpg2.2 头像旋转动画打开\themes\next\source\css_common\components\sidebar\sidebar-author.styl，在里面添加如下代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125; img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125; /* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125;3、主题布局设置在主题配置文件即在next主题目录下的_config.yml文件中将scheme设定为Pisces,可根据个人喜好设置成其他的值12345# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini4、菜单项设置在主题配置文件中的menu中设置，增添一个movies注：千万不要在这设置中文，后面的值那是查找文件的地方！如下1234567891011menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th #archives: /archives #search: /search #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404 movies: /movies || film这些配置都要与你主题目录下的languages文件中对应的yml文档里配置相关联。比如你在站点根目录中的配置文件设置language为zh-Hans，那么就要进入到主题目录下的languages文件中修改zh-Hans.yml，这样才能显示出菜单项新增的中文内容1234567891011menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 movies: 电影5、菜单项图标设置在主题配置文件中对应的字段是menu_icons。格式为item name：icon name，其中item name与所配置的菜单名字对应，icon name是Font Awesome图标的名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。123456789menu_icons: enable: true home: home about: user categories: th tags: tags archives: archive commonweal: heartbeat movies: film新建的栏目icon，需要在Font Awesome图标库存在，例如新建的movies，在图标库中查询选择film图标，在主题配置文件的menu_icons中，更改movies: film6、侧栏位置设置在主题配置文件中修改主题目录下sidebar的position值1234sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). position: left #position: right7、添加标签页面前面通过修改next主题下的_config.yml文件中的menu选项，可以在主页面的菜单栏添加标签选项，但是此时点击标签，跳转的页面会显示page not found。此时我们要新建一个页面在git bush中输入hexo new page tags在新建的index.md文件中添加type: “tags”12345---title: tagsdate: 2019-02-18 17:16:00type: &quot;tags&quot;---当要为某一篇文章添加标签，只需在blog/source/_post目录下的具体文章的tags中添加标签即可，如：成功后为8、侧边栏社交栏目侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中（1）链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。12345678# Social linkssocial: GitHub: https://github.com/your-user-name Twitter: https://twitter.com/your-user-name 微博: http://weibo.com/your-user-name 豆瓣: http://douban.com/people/your-user-name 知乎: http://www.zhihu.com/people/your-user-name # 等等（2）设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。其中seoial_icons节点中后面的值是http://fontawesome.io/icons/ 中提供的图标的名称。之后其他链接如推特，微博等都可自行增减。1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo9、显示当前浏览进度主题配置文件 即themes/*/_config.yml中的b2t（返回顶部）及scrollpercent（浏览百分数）二、个性化设置1、添加萌萌哒二次元看板娘英文介绍中文介绍1.1、安装插件npm install --save hexo-helper-live2d1.2、配置请向根目录的 _config.yml 文件或主题的 _config.yml 文件中添加配置.1234567891011121314151617live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-&lt;你喜欢的模型名字&gt; display: position: right width: 150 height: 300 mobile: show: true模型连接配置详细介绍1.3、配置文件配置文件有很多方法这里主要讲我使用的方法：详情请参考如下：英文介绍中文介绍1.3.1 在博客根目录下建文件夹live2d_models；1.3.2 再在live2d_models下建文件夹&lt;你喜欢的模型名字&gt;；1.3.3 再在&lt;你喜欢的模型名字&gt;下建json文件：&lt;你喜欢的模型名字&gt;.model.json；1.4、安装模型在命令行（即Git Bash）运行以下命令即可：npm install --save live2d-widget-model-&lt;你喜欢的模型名字&gt;模型安装1.5、查看结果在命令行（即Git Bash）运行以下命令， 在http://127.0.0.1:4000/查看测试结果：hexo clean &amp;&amp; hexo g &amp;&amp; hexo s1.6、更改模型若更改模型请从第二步更改model.use；删除第三步原有文件，重新创建，安装模型，查看结果2、实现fork me on github2.1、点击 这里 挑选自己喜欢的样式，并复制代码2.2、然后粘贴刚才复制的代码到themes/*/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址2.3、若位置不对，在 img 标签中修改 style=&quot;position:fixed;top:0;right:0&quot;3、设置网站的图标Favicon在EasyIcon或者Iconfont中找一张（32*32）的ico图标，并将图标名称改为favicon.ico，然后把图标放在/themes/next/source/images里，并且修改主题配置文件 ：4、首页文章添加阴影效果打开\themes\next\source\css_custom\custom.styl,向里面加入：12345678//文章内容添加边框阴影.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125;5、网站顶部加载条修改主题配置文件(_config.yml)将pace: false改为pace: true就行了，你还可以换不同样式的加载条，如下图：6、统计文章阅读量通过leanCloud统计您网站的文章阅读量1.注册LeanCloud, 并创建一个你自己的应用;2.点击图片右上角的设置图标进入应用界面;3.到此，你的应用创建成功，继续表的创建,创建表，并将表的名字命名为：Counter, 如图:4.打开设置 -&gt; 应用key 获取App ID和App Key;5.最后打开主题配置文件: themes/*/_config.yml;1234leancloud_visitors: enable: true app_id: #你的app_id app_key: #你的的app_key6.完成配置并重新编译。到此您已经成功设置了阅读量的统计7、文章加密访问打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码：12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;然后在文章上写上password: ****,如下：8、修改链接URL编辑 站点配置文件下的 _config.yml 文件，修改其中的 permalink字段：permalink: :category/:title/9、文章置顶9.1 安装插件npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save9.2 在需要置顶的文章中加上top即可，数值越大文章越靠前1234567---title: &apos;GitHub + Hexo搭建自己博客(二) Next主题配置 &apos;date: 2019-02-19 15:35:40tags: [hexo,github]categories: blog,hexo,nexttop: 10---9.3 设置置顶标志打开：/themes/*/layout/_macro/post.swig，定位到&lt;div class=&quot;post-meta&quot;&gt;标签下，插入如下代码：12345&#123;% if post.top %&#125; &lt;i class="fa fa-thumb-tack"&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;如下：10、隐藏网页底部powered By Hexo / 强力驱动打开themes/next/layout/_partials/footer.swig,使用&lt;!-- --&gt;隐藏之间的代码即可，或者直接删除。位置如图：11、实现统计功能1.在根目录下安装 hexo-wordcount,运行：npm install hexo-wordcount --save2.然后在主题配置文件中，配置如下：12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: false separated_meta: true12、网站底部字数统计1.在根目录下安装 hexo-wordcount,运行：npm install hexo-wordcount --save2.然后在/themes/next/layout/_partials/footer.swig文件尾部加上：1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt;13、添加 README.md 文件每个项目下一般都有一个 README.md 文件，但是使用 hexo 部署到仓库后，项目下是没有 README.md 文件的。在 Hexo 目录下的 source 根目录下添加一个 README.md 文件，修改站点配置文件 _config.yml，将 skip_render 参数的值设置为skip_render: README.md14、修改文章底部的那个带#号的标签修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成15、添加RSS1.站点根目录下安装插件，npm install --save hexo-generator-feed;2.在站点配置文件_config.yml中，添加如下内容：123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed3.然后再主题配置文件中配置rss;1rss: /atom.xml4.配置完之后运行：hexo clean &amp;&amp; hexo g &amp;&amp; hexo s;5.重新生成一次，你会在./public 文件夹中看到 atom.xml 文件。然后启动服务器查看是否有效，之后再部署到 Github 中16、点击出现桃心效果1.在路径/themes/*/source/js/src里面新建love.js文件并将代码复制进去；1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950! function (e, t, a) &#123; function n() &#123; c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = "left:" + d[e].x + "px;top:" + d[e].y + "px;opacity:" + d[e].alpha + ";transform:scale(" + d[e].scale + "," + d[e].scale + ") rotate(45deg);background:" + d[e].color + ";z-index:99999"); requestAnimationFrame(r) &#125; function o() &#123; var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement("div"); a.className = "heart", d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement("style"); a.type = "text/css"; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName("head")[0].appendChild(a) &#125; function s() &#123; return "rgb(" + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + ")" &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()&#125;(window, document);2.在\themes\*\layout\_layout.swig文件末尾&lt;/body&gt;之前添加12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt;3.我选择的是社会主义核心价值观的特效，因为我们都是社会主义接班人！！123456789101112131415161718192021222324252627282930313233343536373839404142(function() &#123; var T_color = "";//字体颜色,你不设置就是随机颜色, var T_size = [10,20];//文字大小区间,不建议太大 var T_font_weight = "bold";//字体粗斜度--&gt;normal,bold,900 var AnimationTime = 1500;//文字消失总毫秒 var Move_up_Distance = 388;//文字移动距离,正数代表上移，反之下移 var a_index = 0; $("html").click(function(e)&#123; var a = new Array("富强", "民主", "文明", "和谐", "自由", "平等", "公正" ,"法治", "爱国", "敬业", "诚信", "友善"); var $i = $("&lt;span/&gt;").text(a[a_index]); a_index = (a_index + 1) % a.length; var x = e.pageX,y = e.pageY; var x_color = "#" + ('00000' + (Math.random() * 0x1000000 &lt;&lt; 0).toString(16)).substr(-6);//--&gt;随机颜色 //console.log(x_color); if(T_color.length&gt;=4)&#123; x_color = T_color; &#125; var x_size = Math.random()*(T_size[1]-T_size[0]) + T_size[0]; x_size += "px"; $i.css(&#123; "z-index": 99999, "top": y - 20, "left": x, "position": "absolute", "font-weight": "bold", "font-size":x_size, "color": x_color &#125;); $("html").append($i); $i.animate(&#123;"top": y-Move_up_Distance,"opacity": 0&#125;,AnimationTime,function() &#123; $i.remove(); &#125;); &#125;);&#125;)();17、修改文章内链接文本样式1.修改文件 themes\*\source\css\_common\components\post\post.styl，在末尾添加如下css样式，：1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125;18、在文章末尾添加“本文结束”标记1.在路径 \themes\*\layout\_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt;2.打开\themes\*\layout\_macro\post.swig文件，在post-body 之后， post-footer之前添加如下代码（post-footer之前两个DIV）12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt;3.打开主题配置文件（_config.yml),在末尾添加：123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true4.完成以上设置之后，在每篇文章之后都会添加如此效果图19、自定义鼠标样式打开 themes/*/source/css/_custom/custom.styl ,在里面写下如下代码：1234567// 鼠标样式 * &#123; cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;),auto!important &#125; :active &#123; cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;),auto!important &#125;20、Canvas背景在主题配置文件中，找到Canvas配置项，可以应用NNext自带的Canvas特效，如下：想要更改颜色和数量？修改文件：/themes/next/source/lib/canvas-nest/canvas-nest.min.js,修改参考21、修改内容区域的宽度编辑主题的 source/css/_variables/custom.styl 文件，新增变量：12345// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px但是此方法不适用于 Pisces Scheme，对于 Pisces Scheme，需要同时修改 header 的宽度、.main-inner 的宽度以及 .content-wrap 的宽度。例如，使用百分比（Pisces 的布局定义在 source/css/_schemes/Picses/_layout.styl 中）123.header&#123; width: 60%; &#125;.container .main-inner &#123; width: 60%; &#125;.content-wrap &#123; width: calc(100% - 260px); &#125;超过一定宽度后（一行内文字太多导致换行跨度太大），阅读体验不好，我调整的宽度为60%，各位可以自行测试进行调整22、打赏功能1.准备支付宝和微信二维码，存放在themes/*/source/images2.在主题配置文件（_config.yml）中进行设置1234# Rewardreward_comment: 谢谢请我吃辣条！wechatpay: /images/wechatpay.pngalipay: /images/alipay.jpg3.修复图片闪动bug，修改next/source/css/_common/components/post/post-reward.styl，注释wechat:hover和alipay:hover23、配置Valine评论系统1.Valine 是一款基于Leancloud的快速、简洁且高效的无后端评论系统；2.获取Leancloud的APP ID和 APP KEY, 上面第六步设置中已经介绍了获取方法；3.打开主题配置文件: themes/*/_config.yml;12345678910111213# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: # your leancloud application appid appkey: # your leancloud application appkey notify: true # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 在这里说点什么吧... # comment box placeholder avatar: identicon # 评论表头样式 /mm/identicon/monsterid/wavatar/retro/hide guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size4.其他相关配置和邮件提醒方式可查看Valline详细配置官网24、添加搜索功能1.在根目录下安装hexo-generator-searchdb插件，npm install hexo-generator-searchdb --save;2.站点配置文件中添加以下字段12345search: path: search.xml field: post format: html limit: 100003.编辑主题配置文件启用本地搜索123# Local searchlocal_search: enable: true25、不蒜子访问统计1.编辑 主题配置文件 themes/*/_config.yml中的busuanzi_count的配置项即可;123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; page_pv_footer:2.找到主题调用不蒜子的swig文件\themes*\layout_third-party\analytics\busuanzi-counter.swig3.更改域名1234把原有的：&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;域名改一下即可：&lt;script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;26、添加404公益界面1.在根目录下输入hexo new page 404;2.打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md；3.将文件名index.md改为404.html;4.在文件中写入内容，这里使用的是腾讯公益；12345678910111213141516---title: 404 Not Found：该页无法显示toc: falsecomments: falsepermalink: /404---&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8" /&gt; &lt;title&gt;404&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" homePageName="返回首页" homePageUrl="https://sandop.github.io"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt;5.将返回首页的链接更改为自己的链接。27、网页代码压缩网上有很多相关的博文，常规的做法是使用gulp来进行压缩，但是没有成功，所以更换为hexo-neat压缩插件进行。1.站点根目录下安装插件npm install hexo-neat --save；2.修改站点配置文件，在末尾添加以下代码；12345678910111213141516171819202122# hexo-neat# 博文压缩neat_enable: true# 压缩htmlneat_html: enable: true exclude:# 压缩css neat_css: enable: true exclude: - &apos;**/*.min.css&apos;# 压缩jsneat_js: enable: true mangle: true output: compress: exclude: - &apos;**/*.min.js&apos; - &apos;**/jquery.fancybox.pack.js&apos; - &apos;**/index.js&apos;3.执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo s查看效果。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo搭建自己博客(一) 基本内容]]></title>
    <url>%2F2019%2F02%2F18%2FGitHub%20%2B%20Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2(%E4%B8%80)%20%E5%9F%BA%E6%9C%AC%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[一、基本环境1、安装Node.js和配置好Node.js环境NodeJs安装（Windows版本）2、安装Git和配置好Git环境Git安装二、Hexo安装1、在自己认为合适的地方创建文件夹，并进入2、安装Hexo，输入npm install hexo -g,并检查是否安装成功hexo -v3、初始化文件，输入hexo init4、安装所需组件，输入npm install5、生成静态文件，输入hexo g 或者 hexo generate6、启动本地服务，输入hexo s 或者 hexo server若页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入hexo server -p 端口号来改变端口号，例如hexo server -p 50007、若能看见如下图就成功啦三、创建GitHub仓库1、创建项目注意：项目必须要遵守格式：账户名.github.io2、查看项目在新建项目的setting设置中，可以看到GitHub Pages板块，如下图说明创建成功，点击https://账户名.github.io/可以看到自己的博客四、关联博客1、设置Git的user name和email如果是第一次使用Git需要在Git Base Here 中分别输入git config --global user.name &quot;用户名&quot; 及 git config --global user.name &quot;邮箱&quot;2、创建SSH Key在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。也可以输入cd ~/.ssh检查是否有.ssh文件夹，输入ls，列出该文件下的内容。下图说明存在如果没有，打开Git Bash，创建SSH Key：ssh-keygen -t rsa -C &quot;youremail@example.com&quot;你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。3、添加SSH Key(1).登陆GitHub，打开“settings”，“SSH and GPG Keys”页面(2).填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容(3).点“Add Key”，你就应该看到已经添加的Key(4).输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了4、配置Deployment在博客的根目录文件夹中，找到_config.yml文件1234deploy: type: git repository: git@github.com:Sandop/Sandop.github.io.git branch: master注意： 1.每个冒号之后必须有空格；2.repository中的用户名更改为自己的用户名5、安装扩展在生成以及部署文章之前，需要安装一个扩展npm install hexo-deployer-git --save6、生成部署输入命令hexo g及hexo d7、部署成功部署成功后访问你的地址：http://用户名.github.io。那么将看到自己的博客五、设置主题在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。PS：需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。1、安装 NexT主题在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：git clone https://github.com/iissnan/hexo-theme-next themes/next2、启用主题当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。3、查看效果在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。然后在本地查看效果hexo s -g //生成静态文件，启动本地服务4、同步博客在本地浏览没有问题之后就可以同步到博客 执行hexo d5、访问我的hexo+github博客可以访问我的git博客来查看效果： https://sandop.github.io/]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
